# -*- coding: utf-8 -*-
"""
Created on Wed May  3 13:54:48 2023

@author: 33664
"""

#from IPython.display import Image
#from IPython.display import display
#graphs = ['fr','fr_o1','fr_o3']
#for g in graphs:
    #display(Image(filename=g+'.png'))

#Define the objective function

#importing docplex package
from docplex.mp.model import Model

#Create an optimization model
#Model constructor, initially, no variables or constraints

Model(name='')
opt_mod=Model(name="Linear Program")

#Add decision variables
#Add a continuous decision variable to a model

x= opt_mod.continuous_var(name='x',lb=0)
y= opt_mod.continuous_var(name='y',lb=0)

#Add constraints
#Model.add_constraint(ct,ctname=None)
c1=opt_mod.add_constraint(x+y>=8,ctname="c1")
c2=opt_mod.add_constraint(2*x+y>=10,ctname="c2")
c3=opt_mod.add_constraint(x+4*y>=11,ctname="c3")

#Define the objective function
#Model.set_objective(sense,#"max" for maximization,"min" for minimization
# expr) #New objective expression
obj_fn =5*x+4*y
opt_mod.set_objective("min",obj_fn)
opt_mod.print_information()

#Solve the model 

opt_mod.solve()

#output the result
print("fin")
opt_mod.print_solution()
